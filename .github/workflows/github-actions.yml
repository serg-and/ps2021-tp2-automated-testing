name: Full Testing Suite---------
on:
  pull_request:
    branches: main

jobs:
  Build-and-Run-Docker-Image:
    name: Build and run Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: build Docker image
        run: docker build . --file Dockerfile --tag ${{ github.repository }}:latest
      - name: run Docker image
        run: docker run -p 80:80 -d ${{ github.repository }}:latest
      - name: Get web output
        run: |
          code=$(curl -s -o /dev/null -w "%{http_code}" https://www.google.com) ;
          if [ $code = 200 ]; then code=0; fi
          exit $code

  Sysdig-Scan-Dockerfile:
    name: Sysdig scan Docker image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build the Docker image
      # Tag image to be built
      # Change ${{ github.repository }} variable by another image name if you want but don't forget changing also image-tag below
      run: docker build . --file Dockerfile --tag ${{ github.repository }}:latest

    - name: Sysdig Secure Inline Scan
      id: scan
      uses: sysdiglabs/scan-action@768d7626a14897e0948ea89c8437dd46a814b163
      with:
        # Tag of the image to analyse. 
        # Change ${{ github.repository }} variable by another image name if you want but don't forget changing also image-tag above
        image-tag: ${{ github.repository }}:latest
        # API token for Sysdig Scanning auth
        sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_TOKEN}}
        # Sysdig secure endpoint. Please read: https://docs.sysdig.com/en/docs/administration/saas-regions-and-ip-ranges/
        # US-East https://secure.sysdig.com
        # US-West https://us2.app.sysdig.com
        # EU      https://eu1.app.sysdig.com 
        sysdig-secure-url: https://eu1.app.sysdig.com
        dockerfile-path: ./Dockerfile
        input-type: docker-daemon
        ignore-failed-scan: true
        # Sysdig inline scanner requires privileged rights
        run-as-user: root

    - name: Upload SARIF result to GitHub
      uses: github/codeql-action/upload-sarif@v1
      #Upload SARIF file
      if: always()
      with:
        sarif_file: ${{ steps.scan.outputs.sarifReport }}
    
    - name: Check Sysdig scan status
      run: |
        result=$(cat snyk.sarif) | \
          jq -r '.runs[].results | length'
        exit $result
  
  Snyk-Scan-WSGI:
    name: Snyk scan WSGI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=${{ steps.scan.outputs.sarifReport }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
      - name: Check snyk scan status
        run: |
          result=$(cat ${{ steps.scan.outputs.sarifReport }}) | \
            jq -r '.runs[].results | length'
          exit $result

#   snyk-container-scan:
#     name: Snyk container scan
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Build a Docker image
#       run: docker build -t your/image-to-test .
#     - name: Run Snyk to check Docker image for vulnerabilities
#       # Snyk can be used to break the build when it detects vulnerabilities.
#       # In this case we want to upload the issues to GitHub Code Scanning
#       continue-on-error: true
#       uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
#       env:
#         # In order to use the Snyk Action you will need to have a Snyk API token.
#         # More details in https://github.com/snyk/actions#getting-your-snyk-token
#         # or you can signup for free at https://snyk.io/login
#         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#       with:
#         image: your/image-to-test
#         args: --file=Dockerfile

#     - name: Upload result to GitHub Code Scanning
#       uses: github/codeql-action/upload-sarif@v1
#       with:
#         sarif_file: snyk.sarif
